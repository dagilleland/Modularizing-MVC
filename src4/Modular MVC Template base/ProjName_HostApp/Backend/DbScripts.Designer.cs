//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjName_HostApp.Backend {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DbScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DbScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ProjName_HostApp.Backend.DbScripts", typeof(DbScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --------------------------------------------------------------------------------- 
        ///--Database Backups for all databases For Previous Week 
        ///--------------------------------------------------------------------------------- 
        ///SELECT 
        ///CONVERT(CHAR(100), SERVERPROPERTY(&apos;Servername&apos;)) AS &apos;Server&apos;, 
        ///msdb.dbo.backupset.database_name AS &apos;DatabaseName&apos;, 
        ///msdb.dbo.backupset.backup_start_date AS &apos;BackupStartDate&apos;, 
        ///msdb.dbo.backupset.backup_finish_date AS &apos;BackupFinishDate&apos;, 
        ///msdb.dbo.backupset.expiration_date A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseBackupsPreviousWeek {
            get {
                return ResourceManager.GetString("DatabaseBackupsPreviousWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ------------------------------------------------------------------------------------------- 
        ///--Databases Missing a Data (aka Full) Back-Up Within Past 24 Hours 
        ///------------------------------------------------------------------------------------------- 
        ///--Databases with data backup over 24 hours old 
        ///SELECT 
        ///   CONVERT(CHAR(100), SERVERPROPERTY(&apos;Servername&apos;)) AS &apos;Server&apos;, 
        ///   msdb.dbo.backupset.database_name AS &apos;DatabaseName&apos;, 
        ///   MAX(msdb.dbo.backupset.backup_finish_date)  AS &apos;LastDbBackupDate&apos;, 
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseMissingRecentFullBackup {
            get {
                return ResourceManager.GetString("DatabaseMissingRecentFullBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ------------------------------------------------------------------------------------------- 
        ///--Most Recent Database Backup for Each Database 
        ///------------------------------------------------------------------------------------------- 
        ///SELECT  
        ///   CONVERT(CHAR(100), SERVERPROPERTY(&apos;Servername&apos;)) AS &apos;Server&apos;, 
        ///   msdb.dbo.backupset.database_name AS &apos;DatabaseName&apos;,  
        ///   MAX(msdb.dbo.backupset.backup_finish_date) AS &apos;LastDbBackupDate&apos;
        ///FROM   msdb.dbo.backupmediafamily  
        ///   INNER JOIN msdb.dbo.backupset  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MostRecentBackupPerDatabase {
            get {
                return ResourceManager.GetString("MostRecentBackupPerDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ------------------------------------------------------------------------------------------- 
        ///--Most Recent Database Backup for Each Database - Detailed 
        ///------------------------------------------------------------------------------------------- 
        ///SELECT  
        ///   A.[Server] AS &apos;Server&apos;,  
        ///   A.database_name AS &apos;DatabaseName&apos;,
        ///   A.last_db_backup_date AS &apos;LastDbBackupDate&apos;,  
        ///   B.backup_start_date AS &apos;BackupStartDate&apos;,  
        ///   B.expiration_date AS &apos;ExpirationDAte&apos;, 
        ///   B.backup_size AS &apos;BackupSize&apos;,  
        ///   B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MostRecentBackupPerDatabaseDetailed {
            get {
                return ResourceManager.GetString("MostRecentBackupPerDatabaseDetailed", resourceCulture);
            }
        }
    }
}
